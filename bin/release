#!/usr/bin/env bash
set -e
####
#
# "release" script
#
# This script will run each time the app is deployed to Heroku
#
# NOTE: This will will run for review apps as well as production app
#
# @see https://devcenter.heroku.com/articles/release-phase
# @see https://devcenter.heroku.com/articles/release-phase#design-considerations
####

#echo 'Removing Files...'
#rm -vf public/check.php
#echo '...complete'
#echo

#echo 'Stopping Workings...'
#./bin/console messenger:stop-workers -n -vvv --no-debug --env=prod --no-ansi
#echo '...complete'
#echo

# Workers MUST be stopped before clearing the cache
#echo 'Clearing Caches...'
#./bin/console cache:clear -vvv -n --no-debug --env=prod --no-ansi
#./bin/console cache:pool:clear cache.global_clearer -vvv -n --no-debug --env=prod --no-ansi
#echo '...complete'
#echo

echo 'Running Database Migrations...'
#echo '...ensure database production settings...'
#./bin/console doctrine:ensure-production-settings -n -vvv --no-debug --env=prod --no-ansi
echo '...check database migration status...'
./bin/console doctrine:migrations:status -n -vvv --no-debug --env=prod --no-ansi
echo '...running database migrations...'
./bin/console doctrine:migrations:migrate -n -vvv --no-debug --env=prod --no-ansi --query-time --allow-no-migration
echo '...complete'
echo

# Compiling Assets must happen in the composer.json compile scripts since the
# files created here will not be available unless we upload them to CDN
#echo 'Compiling assets...'
#./node_modules/.bin/grunt -vvv
#echo '...complete'
#echo

# We do this here at the end as well because Heroku will restart those workers that
# we told to stop, this should stop them again so that the deploy can get the new
# code out there
echo 'Stopping Workings...'
./bin/console messenger:stop-workers -n -vvv --no-debug --env=prod --no-ansi
echo '...complete'
echo

exit 0
